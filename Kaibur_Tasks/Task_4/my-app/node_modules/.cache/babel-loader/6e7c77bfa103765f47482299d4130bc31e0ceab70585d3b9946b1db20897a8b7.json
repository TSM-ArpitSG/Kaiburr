{"ast":null,"code":"var _jsxFileName = \"E:\\\\Kaibur_Tasks\\\\Task_4\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport ServerForm from \"./ServerForm\";\nimport ServerTable from \"./ServerTable\";\nimport SearchById from \"./SearchById\";\nimport SearchByName from \"./SearchByName\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [servers, setServers] = useState([]);\n\n  //  useEffect(() => {\n  //    // GET request to retrieve all servers\n  //    axios.get(\"http://localhost:8080/servers\")\n  //      .then((res) => {\n  //        setServers(res.data);\n  //      })\n  //      .catch((err) => {\n  //        console.log(err);\n  //      });\n  //  }, []);\n\n  const handleSearchById = id => {\n    // GET request to search for a server by ID\n    axios.get(\"http://localhost:8080/servers/${id}\").then(res => {\n      setServers(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  const handleSearchByName = name => {\n    // GET request to search for a server by name\n    axios.get(\"http://localhost:8080/servers?name=${name}\").then(res => {\n      setServers(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  const handleCreateServer = server => {\n    // POST request to create a new server\n    axios.post(\"http://localhost:8080/servers\", server).then(res => {\n      setServers([...servers, res.data]);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  const handleDeleteServer = id => {\n    // DELETE request to delete a server\n    axios.delete(\"http://localhost:8080/servers/${id}\").then(res => {\n      setServers(servers.filter(server => server.id !== id));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ServerForm, {\n      onSubmit: handleCreateServer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchById, {\n      onSubmit: handleSearchById\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchByName, {\n      onSubmit: handleSearchByName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ServerTable, {\n      servers: servers,\n      onDelete: handleDeleteServer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4jwrWU6weho6tiY1zeQ4HLJ903c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","ServerForm","ServerTable","SearchById","SearchByName","jsxDEV","_jsxDEV","App","_s","servers","setServers","handleSearchById","id","get","then","res","data","catch","err","console","log","handleSearchByName","name","handleCreateServer","server","post","handleDeleteServer","delete","filter","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","onDelete","_c","$RefreshReg$"],"sources":["E:/Kaibur_Tasks/Task_4/my-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport ServerForm from \"./ServerForm\";\nimport ServerTable from \"./ServerTable\";\nimport SearchById from \"./SearchById\";\nimport SearchByName from \"./SearchByName\";\n\nfunction App() {\n  const [servers, setServers] = useState([]);\n\n//  useEffect(() => {\n//    // GET request to retrieve all servers\n//    axios.get(\"http://localhost:8080/servers\")\n//      .then((res) => {\n//        setServers(res.data);\n//      })\n//      .catch((err) => {\n//        console.log(err);\n//      });\n//  }, []);\n\n  const handleSearchById = (id) => {\n    // GET request to search for a server by ID\n    axios.get(\"http://localhost:8080/servers/${id}\")\n      .then((res) => {\n        setServers(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const handleSearchByName = (name) => {\n    // GET request to search for a server by name\n    axios.get(\"http://localhost:8080/servers?name=${name}\")\n      .then((res) => {\n        setServers(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const handleCreateServer = (server) => {\n    // POST request to create a new server\n    axios.post(\"http://localhost:8080/servers\", server)\n      .then((res) => {\n        setServers([...servers, res.data]);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const handleDeleteServer = (id) => {\n    // DELETE request to delete a server\n    axios.delete(\"http://localhost:8080/servers/${id}\")\n      .then((res) => {\n        setServers(servers.filter((server) => server.id !== id));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <div>\n      <ServerForm onSubmit={handleCreateServer} />\n      <SearchById onSubmit={handleSearchById} />\n      <SearchByName onSubmit={handleSearchByName} />\n      <ServerTable servers={servers} onDelete={handleDeleteServer} />\n    </div>\n  );\n}\n\nexport default App;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}