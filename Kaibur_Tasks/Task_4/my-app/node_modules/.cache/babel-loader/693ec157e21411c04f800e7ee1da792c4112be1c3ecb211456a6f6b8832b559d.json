{"ast":null,"code":"var _jsxFileName = \"E:\\\\Kaibur_Tasks\\\\Task_4\\\\my-app\\\\src\\\\SearchById.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SearchById() {\n  _s();\n  const [id, setId] = useState(\"\");\n  const [server, setServer] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const handleSubmit = e => {\n    e.preventDefault();\n    axios.get(`http://localhost:8080/servers/${id}`).then(res => {\n      setServer(res.data);\n      setErrorMessage(null); // reset error message if successful response\n    }).catch(err => {\n      console.log(err);\n      setServer(null);\n      setErrorMessage(\"No server with this ID\"); // set error message if no server with this ID\n    });\n  };\n\n  const handleChange = e => {\n    setId(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Search by ID\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Server ID:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: id,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 24\n    }, this), server && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Server details:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"ID: \", server.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", server.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Language: \", server.language]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Framework: \", server.framework]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(SearchById, \"DDYdKJE67CIEGFdIIydxl8D4ey8=\");\n_c = SearchById;\nexport default SearchById;\nvar _c;\n$RefreshReg$(_c, \"SearchById\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","SearchById","_s","id","setId","server","setServer","errorMessage","setErrorMessage","handleSubmit","e","preventDefault","get","then","res","data","catch","err","console","log","handleChange","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","name","language","framework","_c","$RefreshReg$"],"sources":["E:/Kaibur_Tasks/Task_4/my-app/src/SearchById.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction SearchById() {\r\n  const [id, setId] = useState(\"\");\r\n  const [server, setServer] = useState(null);\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    axios.get(`http://localhost:8080/servers/${id}`)\r\n      .then((res) => {\r\n        setServer(res.data);\r\n        setErrorMessage(null); // reset error message if successful response\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setServer(null);\r\n        setErrorMessage(\"No server with this ID\"); // set error message if no server with this ID\r\n      });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setId(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Search by ID</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          Server ID:\r\n          <input type=\"text\" value={id} onChange={handleChange} />\r\n        </label>\r\n        <button type=\"submit\">Search</button>\r\n      </form>\r\n      {errorMessage && <p>{errorMessage}</p>}\r\n      {server && (\r\n        <div>\r\n          <h3>Server details:</h3>\r\n          <p>ID: {server.id}</p>\r\n          <p>Name: {server.name}</p>\r\n          <p>Language: {server.language}</p>\r\n          <p>Framework: {server.framework}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchById;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}